version: 2.1

executors:
  node-x86:
    docker:
      - image: circleci/node:8.12.0
    working_directory: /tmp/repo

jobs:
  prepare:
    executor: node-x86

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-client-{{ checksum "client/package.json" }}
          - v1-dependencies-server-{{ checksum "server/package.json" }}
          - v1-dependencies-

      - run: 
          name: Install Dependencies
          command: |
            yarn
            cd client && yarn && yarn run build && zip -r dist dist
            cd ../server && yarn
      
      - persist_to_workspace:
          root: /tmp/repo
          paths: 
            - "*/**"    

      - save_cache:
          name: Save Cache
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - save_cache:
          name: Save Client Cache
          paths:
            - client/node_modules
          key: v1-dependencies-client-{{ checksum "client/package.json" }}

      - save_cache:
          name: Save Server Cache
          paths:
            - server/node_modules
          key: v1-dependencies-server-{{ checksum "server/package.json" }}

      - store_artifacts:
          name: Store Client JS
          path: client/dist.zip
          destination: client.zip

  build-electron:
    executor: node-x86
    
    steps:
      - attach_workspace:
          at: /tmp/repo

      - run:
          name: Build Electron
          command: yarn build

      - store_artifacts:
          name: Store Electorn Build
          path: build/out/electron/torrent-player-1.0.0.zip
          destination: electron.zip

  build-server-binaries:
    executor: node-x86
    
    steps:
      - attach_workspace:
          at: /tmp/repo

      - run:
          name: Build Binaries
          command: |
            sudo npm i -g pkg
            pkg --version
            chmod +x build/package-bin.sh
            cd build && sudo ./package-bin.sh

      - store_artifacts:
          name: Store Server Binaries
          path: build/out/zip
          destination: server

workflows:
  version: 2.1
  build:
    jobs:
      - prepare
      - build-electron:
          requires:
            - prepare
      - build-server-binaries:
          requires:
            - prepare


