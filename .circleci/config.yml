version: 2.1

executors:
  node-x86:
    docker:
      - image: circleci/node:12.13.0
    working_directory: /tmp/repo

jobs:
  prepare:
    executor: node-x86

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-client-{{ checksum "client/package.json" }}
          - v1-dependencies-server-{{ checksum "server/package.json" }}

      - run:
          name: Install Dependencies
          command: |
            cd client && yarn
            cd ../server && yarn

      - run:
          name: Build client
          command: |
            cd client
            yarn run build
            zip -r dist dist

      - persist_to_workspace:
          root: /tmp/repo
          paths:
            - "*"
            - "*.*"
            - "*/**"

      - save_cache:
          name: Save Client Cache
          paths:
            - client/node_modules
          key: v1-dependencies-client-{{ checksum "client/package.json" }}

      - save_cache:
          name: Save Server Cache
          paths:
            - server/node_modules
          key: v1-dependencies-server-{{ checksum "server/package.json" }}

  build-electron:
    docker:
      - image: electronuserland/builder:wine

    working_directory: /tmp/repo

    steps:
      - attach_workspace:
          at: /tmp/repo

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Build Electron
          command: |
            yarn && yarn build
            cd build/out/electron

      - save_cache:
          name: Save Cache
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}


      - persist_to_workspace:
          root: /tmp/repo
          paths:
            - "build/out/electron/*.zip"

  # release-heroku:
  #   executor: node-x86

  #   steps:
  #     - attach_workspace:
  #         at: /tmp/repo

  #     - setup_remote_docker

  #     - run:
  #         name: Build Docker Image
  #         command: |
  #           echo $HEROKU_API_KEY | docker login --username=$HEROKU_LOGIN --password-stdin registry.heroku.com
  #           docker build --rm=false -t registry.heroku.com/$HEROKU_APP_NAME/web .
  #           docker inspect registry.heroku.com/$HEROKU_APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID_FILE
  #           docker push registry.heroku.com/$HEROKU_APP_NAME/web:latest
  #           curl -n -X PATCH https://api.heroku.com/apps/$HEROKU_APP_NAME/formation \
  #             -d '{ "updates": [ { "type": "web", "docker_image": "'"$WEB_DOCKER_IMAGE_ID"'" }]}' \
  #             -H "Content-Type: application/json" \
  #             -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
  #             -H "Authorization: Bearer $HEROKU_API_KEY"

  publish:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: /tmp/repo
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION="1.0.${CIRCLE_BUILD_NUM}"
            echo "Release version ${VERSION}"
            cd /tmp/repo/build/out
            echo $VERSION >> release
            find electron -name "*.zip" -exec sh -c 'zip -ur $1 release' {} \;
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${VERSION} electron


workflows:
  version: 2.1
  build:
    jobs:
      - prepare:
          filters:
            branches:
              only: master
      - build-electron:
          requires:
            - prepare
      # - release-heroku:
      #     requires:
      #       - prepare
      - publish:
          requires:
            - build-electron